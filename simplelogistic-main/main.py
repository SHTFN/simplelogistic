import sys
import sqlite3
from pathlib import Path
from sys import argv



from PyQt5 import uic
from PyQt5.QtWidgets import QApplication, QMainWindow, QWidget, QPushButton, QDialog, QTableWidgetItem

class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        script_dir = Path(argv[0]).parent.resolve()

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ .ui —Ñ–∞–π–ª–æ–≤
        uic.loadUi(script_dir / 'main.ui', self)

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db_path = script_dir / 'flightsDB.sqlite'
        self.con = sqlite3.connect(db_path)

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        self.addNote.clicked.connect(self.selectData)
        # self.sortComboBox.currentTextChanged.connect(self.sortComboBoxChanged)

        self.tableWidget.setSortingEnabled(True)

        self.selectData()

    def selectData(self):
        query = "SELECT departurePoint, departureDate, arrivalPoint, arrivalDate, price, downtime, driversFullName, " \
                "driversSalary, driversDowntime, fuelConsumption, additionalExpenses FROM flights"
        res = self.con.cursor().execute(query).fetchall()
        title = ['–î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏', '–î–∞—Ç–∞ –≤—ã–≥—Ä—É–∑–∫–∏', '–¢–æ—á–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏',  '–¢–æ—á–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏',
                 '–¶–µ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏', '–ü—Ä–æ—Å—Ç–æ–π\n–∑–∞–≥—Ä—É–∑–∫–∏', '–§–ò–û –≤–æ–¥–∏—Ç–µ–ª—è', '–ó–∞—Ä–ø–ª–∞—Ç–∞\n–≤–æ–¥–∏—Ç–µ–ª—è',
                 '–ü—Ä–æ—Å—Ç–æ–π –≤–æ–¥–∏—Ç–µ–ª—è', '–¢—Ä–∞—Ç—ã –Ω–∞ –±–µ–Ω–∑–∏–Ω', '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ\n—Ç—Ä–∞—Ç—ã']
        self.tableWidget.setColumnCount(len(title))
        self.tableWidget.setRowCount(0)

        self.tableWidget.setHorizontalHeaderLabels(title)
        for i, row in enumerate(res):
            self.tableWidget.setRowCount(
                self.tableWidget.rowCount() + 1)
            for j, elem in enumerate(row):
                self.tableWidget.setItem(
                    i, j, QTableWidgetItem(str(elem)))
        self.tableWidget.resizeColumnsToContents()

    def deleteWidget(self):
        self.delete.emit(self.id_widget)

    def addNoteWidget(self):
        '''self.newWidget = QPushButton(self)
        self.flightLayout.addWidget(self.newWidget)'''
        pass

    '''def sortComboBoxChanged(self):
        text = self.sortComboBox.currentText()
        if text == '–î–∞—Ç–µ: –±–ª–∏–∂–∞–π—à–∏–µ':
            print('–î–∞—Ç–µ: –±–ª–∏–∂–∞–π—à–∏–µ')
        elif text == '–î–∞—Ç–µ: –¥–∞–ª—å–Ω–µ–π—à–∏–µ':
            print('–¥–∞–ª—å–Ω–µ–π—à–∏–µ')
        elif text == '–ü—Ä–∏–±—ã–ª—å ü†ï':
            print('–ü—Ä–∏–±—ã–ª—å ü†ï')
        elif text == '–ü—Ä–∏–±—ã–ª—å ü†ó':
            print('–ü—Ä–∏–±—ã–ª—å ü†ó')'''


def except_hook(cls, exception, traceback):
    sys.__excepthook__(cls, exception, traceback)


if __name__ == '__main__':
    app = QApplication(sys.argv)
    form = MainWindow()
    form.setFixedSize(1540, 640)
    form.show()
    sys.excepthook = except_hook
    sys.exit(app.exec())